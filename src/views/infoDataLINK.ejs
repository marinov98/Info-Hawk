<%- include('partials/header'); -%> <%- include('partials/navbar'); -%>

<form style="margin-left: 10px; margin-right: 50px" action="/infoData">
  <h2 style="margin-top: 5px">Send Link to Client</h2>
  <div id="info-data-error-link" class="info-data error alert alert-info" role="alert">
    Please input the person's email for whom you wish to send a link to or click the copy button to
    copy the link
  </div>
  <div class="mb-3">
    <label for="email" class="form-label">Email</label>
    <input
      type="text"
      name="email"
      class="form-control"
      placeholder="myclient@example.com"
      required
    />
  </div>
  <input style="visibility: hidden" value="URL/<%=auth._id%>/<%=formId%>" id="copy-input" />
  <input style="visibility: hidden" value="<%=auth.code%> " id="copy-input-code" />
  <div style="margin: 5px; text-align: center">
    <button
      style="font-size: x-large; margin-right: 10px; margin-top: 5px"
      id="copy-btn"
      class="btn btn-success"
    >
      Copy Link
    </button>
    <button style="font-size: x-large; margin-top: 5px" id="send-email-btn" class="btn btn-primary">
      Send Email
    </button>
  </div>
</form>

<script>
  const form = document.querySelector("form");
  const copyText = document.getElementById("copy-input");
  const [, adminId, formId] = copyText.value.split("/");
  const refs = location.href.split("/");
  copyText.value = `${refs[0]}/${refs[1]}/${refs[2]}/client/form-submission/${adminId}/${formId}`;
  const infoError = document.getElementById("info-data-error-link");
  const copyButton = document.getElementById("copy-btn");
  form.addEventListener("submit", async e => {
    e.preventDefault();
    try {
      const userEmail = form.email.value;
      const { data } = await axios.post(`/auth/forms/link/${adminId}/${formId}`, { userEmail });
      if (data.message) {
        infoError.className = "info-data error alert alert-success";
        infoError.textContent = data.message;
        await new Promise(resolve => setTimeout(resolve, 2000));
      }
    } catch (err) {
      infoError.className = "info-data error alert alert-danger";
      if (err.response && err.response.data) {
        const { hawkError } = err.response.data;
        if (hawkError && hawkError.msg) infoError.textContent = hawkError.msg;
      } else {
        infoError.textContent = err.message || "Something went wrong try again later...";
      }
    }
  });

  copyButton.addEventListener("click", e => {
    e.preventDefault();
    const code = document.getElementById("copy-input-code").value;

    copyText.select();
    copyText.setSelectionRange(0, 99999); /* For mobile devices */

    navigator.clipboard.writeText(copyText.value);

    alert(`Copied Value: ${copyText.value}. \n Make sure your client uses code ${code}`);
  });
</script>
