<%- include('partials/header'); -%>

<form onchange="handleChange()"  style="margin-left: 10px; margin-right: 50px" action="/infoData">
  <div
    id="info-data-error-client"
    class="info-data error alert alert-info"
    style="margin: 5px"
    role="alert"
  >
    Please fill out this form for your service provider. Use CTR + click for multiple selections.
  </div>
  <h2 id="form-data-client-title" style="text-align: center; margin-top: 10px"><%=form.title%></h2>
  <% if (auth) {%>
  <div class="mb-3">
    <label for="adminCode" class="form-label">Admin Code</label>
    <input
      type="text"
      name="adminCode"
      class="form-control"
      value="<%=auth.code%>"
      placeholder="admin code goes here..."
      required
    />
  </div>
  <% } else { %>
  <div class="mb-3">
    <label for="adminCode" class="form-label">Admin Code</label>
    <input
      type="text"
      name="adminCode"
      class="form-control"
      placeholder="admin code goes here..."
      required
    />
  </div>
  <% } %> 
  <% Object.entries(form).forEach(([key, val]) => { if (val.inputType) {%>
      <% if (val.inputType === "single") { %> 
      <div id="<%=key%>" class="mb-3">
        <label for="<%=key%>" class="form-label"><%=key.split("_^_").join(" ")%> </label>
        <% if (val.input !== "UNANSWERED" && val.input !== "") {%> 
          <input
            type="text"
            name="<%=key%>"
            value="<%=val.input%>"
            class="form-control skeleton-key-item"
            placeholder="Your answer goes here..."
            required
          />
        <% } else {%> 
          <input
            type="text"
            name="<%=key%>"
            class="form-control skeleton-key-item"
            placeholder="Your answer goes here..."
            required
          />
        <% } %> 
      </div>
    <% } else  {%> 
      <div id="<%=key%>" class="mb-3">
        <label for="<%=key%>" class="form-label"><%=key.split("_^_").join(" ")%> </label>
        <% const isMulti = val.inputType === "mc-multiple" ? true : false%> 
        <% if (isMulti) {%> 
          <select id="<%=key%>-<%=val.input%>-multi" class="form-select skeleton-key-option mc-multiple" multiple required>
        <% } else { %> 
          <select id="<%=key%>-<%=val.input%>-single" class="form-select skeleton-key-option mc-single" required>
          <% } %> 
          <% const hasSession = val.originalOptions ? true : false %> 
          <% const selections = hasSession ? val.originalOptions : val.input %> 
          <% const savedInput = hasSession ? new Set(val.input.split(",")) : null %> 
          <% selections.split("|*|").forEach((option, i) => { %> 
            <% if ((hasSession && savedInput.has(option)) || i === 0) {%> 
              <option value="<%=option%>" selected><%=option%> </option>
            <% }  else { %> 
              <option value="<%=option%>"><%=option%></option>
            <%  } %> 
          <% }); %> 
        </select>
      </div>
    <% } %> 
  <% } }); %>

  <div style="text-align: center">
    <button id="submit-btn" class="btn btn-primary" style="font-size: x-large">Submit</button>
  </div>
</form>

<script>
  let changes = 0;
  const form = document.querySelector("form");
  const errorClass = "info-data alert alert-danger";
  const submitButton = document.getElementById("submit-btn");
  const infoError = document.getElementById("info-data-error-client");
  
  async function handleChange() {
    if (++changes % 5 === 0) {
      infoError.className = "info-data alert alert-info";
      infoError.textContent = "Saving Submission...";
      const { data } = await axios.post("/client/forms/session", { submission: fillSubmission() })
      if (data.msg) {
        infoError.textContent = "Submission saved!";
      }
      else { 
        infoError.textContent = "Submission could not be saved"
      }
      changes = 0
    }
  }

  function grabInputs() {
    const inputs = document.querySelectorAll(".skeleton-key-item");
    const singleMC = document.querySelectorAll(".mc-single")
    const multiMC = document.querySelectorAll(".mc-multiple")
    return { inputs, singleMC, multiMC }
  }

  function fillSubmission() {
    const adminCode = form.adminCode.value;
    const title = document.getElementById("form-data-client-title").textContent;
    const clientSubmission = { title, code: adminCode };
    const { inputs, singleMC, multiMC } = grabInputs();
    inputs.forEach(input => clientSubmission[input.name] = { input: input.value, inputType: "single" })
    singleMC.forEach(mc => {
      const key = mc.id.split("-")[0]
      clientSubmission[key] = {
        input: mc.value, 
        originalOptions: [...mc.options].map(opt => opt.value).join("|*|"),
        inputType: "mc-single"
      }
    })
    multiMC.forEach(mc => { 
      const key = mc.id.split("-")[0]
      const options = [...mc.options]
      const selected = options.filter(opt => opt.selected).map(opt => opt.value)
      clientSubmission[key] = { 
        input: selected.join(","),
        originalOptions: options.map(opt => opt.value).join("|*|"),
        inputType: "mc-multiple" 
      }
    })

    return clientSubmission
  }

  form.addEventListener("submit", async e => {
    e.preventDefault();
    if (confirm("Are you sure you are ready to submit?")) {
      const clientSubmission = fillSubmission()
      try {
        infoError.className = "info-data alert alert-info";
        infoError.textContent = "Submitting Submission...";

        const { data } = await axios.post("/client/form-submission", { form: clientSubmission });
        if (data.msg) {
          infoError.className = "alert alert-success";
          infoError.textContent = `${data.msg} Redirecting you to home...`;
          await new Promise(resolve => setTimeout(resolve, 2000));
          location.assign("/");
        }
      } catch (err) {
        infoError.className = errorClass;
        if (err.response && err.response.data) {
          const { hawkError } = err.response.data;
          if (hawkError && hawkError.msg) infoError.textContent = hawkError.msg;
        } else {
          infoError.textContent = err.message || "Something went wrong try again later...";
        }
      }
    }
  });
</script>
