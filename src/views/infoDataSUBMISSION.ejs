<%- include('partials/header'); -%> <%- include('partials/navbar'); -%> <% if (submission) {%>

<form style="margin-left: 10px; margin-right: 50px" action="/infoData">
  <div
    id="info-data-error-submission"
    class="info-data error alert alert-info"
    style="margin: 5px"
    role="alert"
  >
    The submission answers are shown below
  </div>
  <h2 id="form-data-title" style="text-align: center; margin-top: 10px"><%=submission.title%></h2>
  <div class="mb-3">
    <label for="adminCode" class="form-label">Admin Code</label>
    <input
      id="auth-code-submission"
      type="text"
      name="adminCode"
      class="form-control"
      value="<%=auth.code%>"
      readonly
    />
  </div>
  <% Object.entries(submission).forEach(([key, val]) => { if (key !== submission.title && typeof val
  === "string") {%>
  <div id="<%=key%>" class="mb-3">
    <label for="<%=key%>" class="form-label"><%=key.split("_^_").join(" ")%> </label>
    <input
      type="text"
      value="<%=val%>"
      name="<%=key%>"
      class="form-control skeleton-key-item"
      readonly
    />
  </div>
  <% } }); %>
  <div style="text-align: center">
    <button id="delete-submission-btn" style="font-size: x-large; margin-top: 5px" class="btn btn-danger">Delete</button>
    <button
      id="action-excel-btn"
      class="btn btn-success"
      style="font-size: x-large; margin-top: 5px"
    >
      XML
    </button>
  </div>
</form>
<input style="visibility: hidden" id="dataStorage" value="<%=JSON.stringify(submission)%>"></input>
<% } %>

<script>
  const form = document.querySelector("form");
  const errorClass = "info-data alert alert-danger";
  const infoClass = "info-data alert alert-info";
  const infoError = document.getElementById("info-data-error-submission");
  deletionBtn = document.getElementById("delete-submission-btn");
  xmlButton = document.getElementById("action-excel-btn");
  const JOINER = "_^_";

  deletionBtn.addEventListener("click", async e => {
    e.preventDefault();
    if (confirm("Are you sure you want to delete this submission? This action cannot be undone..."))
      try {
        infoError.className = infoClass;
        infoError.textContent = "Deleting..."
        const code = document.getElementById("auth-code-submission").value;
        const refs = location.href.split("/");
        const formId = refs[refs.length - 1];
        const { data } = await axios.delete("/auth/forms/submissions/delete", {
          data: {
            code,
            formId
          }
        });

        if (data.msg) {
          infoError.className = "alert alert-success";
          infoError.textContent = `${data.msg} Redirecting you soon...`;
          await new Promise(resolve => setTimeout(resolve, 2000));
          location.assign("/auth/forms/submissions");
        }
      } catch (err) {
        infoError.className = errorClass;
        if (err.response && err.response.data) {
          const { hawkError } = err.response.data;
          if (hawkError && hawkError.msg) infoError.textContent = hawkError.msg;
        } else {
          infoError.textContent = err.message || "Something went wrong try again later...";
        }
      }
  });

  xmlButton.addEventListener("click", async function toXml(e) {
    e.preventDefault();
    infoError.className = infoClass;
    infoError.textContent = "Exporting...";
    jsonStr = document.getElementById("dataStorage").value;
    const { data: { output } } = await axios.post("/auth/forms/xml/single", { jsonStr })
    if (!output || !output[0]._id) {
      infoError.className = errorClass;
      infoError.textContent = "Export failed!"
    }
    else { 
      filename = `submission_report-${output[0]._id}.xlsx`;
      let ws = XLSX.utils.json_to_sheet(output);
      let wb = XLSX.utils.book_new();
      XLSX.utils.book_append_sheet(wb, ws, "Submission");
      XLSX.writeFile(wb, filename);
      infoError.className = "info-data alert alert-success";
      infoError.textContent = "Submission successfully exported to XML!";
    }
  });
</script>
