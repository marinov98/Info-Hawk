<%- include('../partials/header'); -%>

<form style="margin-left: 10px; margin-right: 50px" action="/infoData">
  <div
    id="info-data-error-client"
    class="info-data error alert alert-info"
    style="margin: 5px"
    role="alert"
  >
    Please fill out this form for your service provider
  </div>
  <h2 id="form-data-client-title" style="text-align: center"><%=form.title%></h2>
  <div class="mb-3">
    <label for="adminCode" class="form-label">Admin Code</label>
    <input
      type="text"
      name="adminCode"
      class="form-control"
      placeholder="admin code goes here..."
      required
    />
  </div>
  <% Object.entries(form).forEach(([key, val]) => { if (val === true && key !== "isSkeleton") {%>
  <div id="<%=key%>" class="mb-3">
    <label for="<%=key%>" class="form-label"><%=key.split("-").join(" ")%> </label>
    <input
      type="text"
      name="<%=key%>"
      class="form-control skeleton-key-item"
      placeholder="your answer goes here..."
      required
    />
  </div>
  <% } }); %>

  <div style="text-align: center">
    <button id="submit-btn" class="btn btn-primary" style="font-size: xx-large">Submit</button>
  </div>
</form>

<script>
  const form = document.querySelector("form");
  const submitButton = document.getElementById("submit-btn");
  const infoError = document.getElementById("info-data-error-client");

  form.addEventListener("submit", async e => {
    e.preventDefault();
    if (confirm("Are you sure you are ready to submit?")) {
      const inputs = document.querySelectorAll(".skeleton-key-item");
      const adminCode = form.adminCode.value;
      const title = document.getElementById("form-data-client-title").textContent;
      const submission = { title, code: adminCode };
      for (const input of inputs) {
        submission[input.name] = input.value;
      }
      try {
        const { data } = await axios.post("/client/form-submission", { form: submission });
        if (data.msg) {
          infoError.className = "alert alert-success";
          infoError.textContent = `${data.msg} Redirecting you to home...`;
          await new Promise(resolve => setTimeout(resolve, 2000));
          location.assign("/");
        }
      } catch (err) {
        infoError.className = errorClass;
        if (err.response && err.response.data) {
          const { hawkError } = err.response.data;
          if (hawkError && hawkError.msg) infoError.textContent = hawkError.msg;
        } else {
          infoError.textContent = err.message || "Something went wrong try again later...";
        }
      }
    }
  });
</script>
